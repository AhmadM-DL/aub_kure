services:
  db:
    image: postgres:16
    volumes:
      - db_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER_FILE=/run/secrets/db_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_user
      - db_password

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    environment:
      # Database
      - DB_HOST=db
      - DB_NAME_FILE=/run/secrets/db_user
      - DB_PASSWORD_FILE=/run/secrets/db_password
      # Application
      - SECRET_KEY_FILE=/run/secrets/backend_secret
      - DEBUG=False
      - LOG_LEVEL=DEBUG
      - ALLOWED_HOSTS=localhost 127.0.0.1
    secrets:
      - db_user
      - db_password
      - backend_secret
    depends_on:
      - db

  speech-to-text:
    build: ./speech-to-text
    ports:
      - "5000:5000"
    volumes:
      - whisper_cache:/root/.cache/whisper
    restart: always

  mood-tracker:
    build: ./mood-tracker
    ports:
      - 5001:5000
    volumes:
      - mood_tracker_cache:/root/.cache/huggingface

  suicide-detection:
    build: ./suicide-detection
    ports:
      - 5002:5000
    volumes:
      - suicide_detection_cache:/root/.cache/huggingface
  pipeline:
    build: ./Orchestration
    ports:
      - "8080:8080"
    depends_on: # waits for the dependencies to launch , before running
      - backend
      - speech-to-text
      - mood-tracker
      - suicide-detection
    environment:
      - whisper_url=http://speech-to-text:5000/transcribe
      - mood_url=http://mood-tracker:5000/sentiment
      - suicide_url=http://suicide-detection:5000/suicide-risk
      - backend_url=http://backend:8000/api

secrets:
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt
  backend_secret:
    file: ./secrets/backend_secret.txt

volumes:
  db_data:
  whisper_cache:
  suicide_detection_cache:
  mood_tracker_cache:
